# Generated by invil v0.2.5
AC_INIT([libspuro], [0.1.0], [jgabaut@github.com])
AM_INIT_AUTOMAKE([foreign -Wall])
AC_CANONICAL_HOST
build_linux=no
build_windows=no
build_mac=no
echo "Host os:  $host_os"

AC_ARG_ENABLE([debug],  [AS_HELP_STRING([--enable-debug], [Enable debug build])],  [enable_debug=$enableval],  [enable_debug=no])
AM_CONDITIONAL([DEBUG_BUILD], [test "$enable_debug" = "yes"])
case "${host_os}" in
	mingw*)
		echo "Building for mingw32: [$host_cpu-$host_vendor-$host_os]"
		build_windows=yes
		AC_SUBST([SPR_CFLAGS], ["-I/usr/x86_64-w64-mingw32/include -static -fstack-protector"])
		AC_SUBST([SPR_LDFLAGS], ["-L/usr/x86_64-w64-mingw32/lib"])
		AC_SUBST([CCOMP], ["/usr/bin/x86_64-w64-mingw32-gcc"])
		AC_SUBST([OS], ["w64-mingw32"])
		AC_SUBST([TARGET], ["spuro-demo.exe"])
        AC_SUBST([SHARED_LIB], ["libspuro.dll"])
	;;
	darwin*)
		build_mac=yes
		echo "Building for macos: [$host_cpu-$host_vendor-$host_os]"
		AC_SUBST([SPR_CFLAGS], ["-I/opt/homebrew/opt/ncurses/include"])
		AC_SUBST([SPR_LDFLAGS], ["-L/opt/homebrew/opt/ncurses/lib"])
		AC_SUBST([OS], ["darwin"])
		AC_SUBST([TARGET], ["spuro-demo"])
        AC_SUBST([SHARED_LIB], ["libspuro.so"])
	;;
	linux*)
		echo "Building for Linux: [$host_cpu-$host_vendor-$host_os]"
		build_linux=yes
		AC_SUBST([SPR_CFLAGS], [""])
		AC_SUBST([SPR_LDFLAGS], [""])
		AC_SUBST([OS], ["Linux"])
		AC_SUBST([TARGET], ["spuro-demo"])
        AC_SUBST([SHARED_LIB], ["libspuro.so"])
	;;
esac

AM_CONDITIONAL([DARWIN_BUILD], [test "$build_mac" = "yes"])
AM_CONDITIONAL([WINDOWS_BUILD], [test "$build_windows" = "yes"])
AM_CONDITIONAL([LINUX_BUILD], [test "$build_linux" = "yes"])

AC_ARG_VAR([VERSION], [Version number])
if test -z "$VERSION"; then
  VERSION="0.1.0"
fi
AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number])
AC_CHECK_PROGS([CCOMP], [gcc clang])
AC_CHECK_HEADERS([stdio.h])
AC_CHECK_FUNCS([malloc calloc])
AC_CONFIG_FILES([Makefile])
AC_OUTPUT
